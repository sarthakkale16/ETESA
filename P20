// 20. Array of Pointers and Memory Management
// Problem Statement: The code initializes an array of pointers to int and allocates memory for each pointer. However, the deallocation loop is missing and the program suffers from a memory leak.

#include <iostream>#include <numeric>
const int ARRAY_SIZE = 5;
void initializePointers(int** ptr_array) {
    for (int i = 0; i < ARRAY_SIZE; ++i) {
        ptr_array[i] = new int(i + 10);
    }
    std::cout << "Pointers initialized and memory allocated." << std::endl;
}
void printPointerValues(int** ptr_array) {
    std::cout << "Values from pointer array:" << std::endl;
    for (int i = 0; i < ARRAY_SIZE; ++i) {
        std::cout << "ptr_array[" << i << "] -> " << *ptr_array[i] << std::endl;
    }
}
int main() {
    int* ptr_array[ARRAY_SIZE];
    
    initializePointers(ptr_array);
    printPointerValues(ptr_array);
    
    // The memory allocated by `new int(i+10)` is never freed.
    // The program will leak memory.
    
    return 0;
}
